/* selector2.css */
@charset "utf-8";
/* reset.css */
html,body {width:100%; height:100%; color:#333;}
html,body,div,img,p,pre,ul,ol,li,dl,dt,dd {margin:0; padding:0; border:0; outline:0;}
ul,ol,li {list-style:none;}
a {text-decoration:none; color:inherit;}
a:hover {color:#171717; font-weight:bold;}

header, article, footer, nav, section, aside, main, figure, figcaption {display:block;}

/* ============================================================= */
/* common.css */
.clearfix:after {content:" "; display:block; width:100%; height:0; clear:both;}
.hidden {display:block; position:absolute; z-index:-1; width:0; height:0; overflow:hidden;}

/* ============================================================= */
/* design.css */
/* 선택자2
    형제 선택자
    인접 형제 선택자
    nth 선택자 (1st, 2nd, 3rd, 4th, nth......)
    속성 선택자 ( href="", src="", alt="" )
*/

#wrap {width: 960px; height:auto; margin:auto; background-color: #cfcfcf;}
.part {width: 100%; height: auto; min-height:500px; margin-bottom:2rem; 
     background-color: #fcc;}

ul {width: 100%; height:auto;}
li {width:100%; height:30px; border-bottom:1px solid #333;}

.sib:active > li { color: #f06;}
.set:hover {background-color: #fff;}
.set:hover ~ li {background-color: #ccf;}
.set:hover + li {background-color: #acf;}

/* 
  css상에서 형제선택자는:
  형제중에 자신의 형의 위치에오는 요소는 해당되지 않는다.
  동생의 위치에 오는 요소만 처리할 수 있다.
*/

.n_child{background-color: #fff;}
.n_child > li:nth-child(1), 
.n_child > li:nth-child(3){background-color: #fa0;}
.n_child > li:nth-child(4n+2){color:#f0f; font-weight: bold;}
.n_child > li:first-child {font-style:italic;}
.n_child > li:last-child {font-style:italic; border-radius:1rem;}
.n_child > li:nth-last-child(2){background-color: #000;}


.nth2 > li:nth-child(3n) {background-color: #fff;}
.nth2 > li:not(:nth-child(3n)) {background-color: #fca;}
.nth2 > li:nth-child(6) {background-color: transparent;}
.nth2 > li:nth-child(n+4):nth-child(-n+8) {text-indent:3rem; font-weight: bold;}


/*
  홀수(odd), 짝수(even)
  nth-child는 반드시 연속된 동일 요소상에서 처리하는 기법
*/


.of_type > p:nth-of-type(5) {background-color: #fff; border-bottom:1px solid #555;}
.of_type > p:last-of-type {background-color: #fff; border-bottom:1px solid #555;}
/*
  nth-child는 반드시 연속되어진 요소/ 연속되어진 형태를 보고 처리하는 기능
  nth-of-type은 동일한 요소(태그)를 가진 형태의 순서를 재할당해서 가지는 기능

  first-of-type
  last-of-type
  nth-of-type(2n-1)
  nth-last-of-type()


/* 속성 선택자 */
.attr {background-color: #fafaaa;}
.attr:after{content:" "; display:block; width:100%; height:0; clear:both;}

.attr > li {float:left; width:200px; height:200px; border:1px solid #333;
      margin:10px;}
.attr > li > img {width:100px; height:auto;}      


.attr > li > a[target="_blank"] {font-size:3rem;}
.attr > li > a[href$="com"] {background-color: #f0a;}
.attr > li > img[src*="d"] {width:100%;}
.attr > li[class~="list"] {background-color: #fff;}


/*
  ^ : 시작
  $ : 끝
  * : 모든 속성 값을 뜻하지만 띄어쓰기구분이 없는것
  ~ : 모든 속성 값이지만 띄어쓰기로 처리된 단어로 구분
*/

/* pseudo code 의사 결정 코드 */
.before_after > p {color:#0cf; font-weight: bold; font-size: 1.3rem;}

.before_after > p:first-of-type:before {content:"문장의 앞에"; color:#333;}
.before_after > p:last-of-type:after {content:"문장의 뒤에"; color:#333;}